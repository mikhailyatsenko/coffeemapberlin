Проект должен следовать следует FSD архитектуре.
Пример структуры модуля:

src/entities/DatePicker/
├── components/
│   ├── Chevron/
│   │   └── ui/
│   │       ├── Chevron.tsx
│   │       └── index.ts
│   ├── Dropdown/
│   │   └── ui/
│   │       ├── Dropdown.tsx
│   │       └── index.ts
├── constants/
│   └── index.ts
├── types/
│   └── index.ts
├── ui/
│   ├── DatePicker.tsx
│   └── index.ts
└── index.ts


Точка входа модуля. Экспортирует публичный API (в данном случае — всё из ui).
ui/
Основной публичный компонент (DatePicker.tsx), его стили и index для реэкспорта.
types/
Описывает все типы, которые используются в модуле.
constants/
Константы и магические числа, связанные с модулем.
components/
Внутренние переиспользуемые компоненты, разбитые по папкам (например, Dropdown, Chevron).
Каждый компонент оформлен как отдельный подмодуль с подпапкой ui/, где лежит сам компонент, index для экспорта и стили.

Чёткое разделение на публичный API (ui, types, constants) и внутренние компоненты (components).
Каждый внутренний компонент оформлен как мини-модуль с подпапкой ui/.
Все экспорты делаются через index-файлы.
Используются отдельные файлы для типов и констант.
Папка ui — для публичных компонентов, которые будут использоваться снаружи.